name: CI-BUILD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  xcodebuild:
    name: xcodebuild
    runs-on: macos-14
    strategy:
      matrix:
        command: [test, '']
        platform: [iOS, macOS, tvOS, watchOS, visionOS, macCatalyst]
        xcode: [15.4, '16.0']
    steps:
      - uses: actions/checkout@v4
      - name: Select Xcode ${{ matrix.xcode }}
        run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
      - name: Cache derived data
        uses: actions/cache@v3
        with:
          path: |
            ~/.derivedData
          key: |
            deriveddata-xcodebuild-${{ matrix.platform }}-${{ matrix.xcode }}-${{ matrix.command }}-${{ hashFiles('**/Sources/**/*.swift', '**/Tests/**/*.swift') }}
          restore-keys: |
            deriveddata-xcodebuild-${{ matrix.platform }}-${{ matrix.xcode }}-${{ matrix.command }}-
      - name: Set IgnoreFileSystemDeviceInodeChanges flag 
        run: defaults write com.apple.dt.XCBuild IgnoreFileSystemDeviceInodeChanges -bool YES
      - name: Update mtime for incremental builds 
        uses: chetan/git-restore-mtime-action@v2
      - name: Debug
        run: make COMMAND="${{ matrix.command }}" CONFIG=Debug PLATFORM="${{ matrix.platform }}" xcodebuild
      - name: Release
        if: matrix.skip_release != '1'
        run: make COMMAND="${{ matrix.command }}" CONFIG=Release PLATFORM="${{ matrix.platform }}" xcodebuild

  linux:
    runs-on: ubuntu-latest
      container: swift:latest
      steps:
      - uses: actions/checkout@v4
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: |
            .build
          key: |
            build-spm-linux-${{ matrix.swift-verion }}-${{ hashFiles('**/Sources/**/*.swift', '**/Tests/**/*.swift', '**/Package.resolved') }}
          restore-keys: |
            build-spm-linux-${{ matrix.swift-verion }}-
      - run: make dot-env
      - run: swift build --build-tests
      - run: swift test --skip-build --enable-swift-testing --parallel



  # library-evolution:
  #   name: Library (evolution)
  #   runs-on: macos-14
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Select Xcode 15.4
  #       run: sudo xcode-select -s /Applications/Xcode_15.4.app
  #     - name: Build for library evolution
  #       run: make build-for-library-evolution

  examples:
    name: Examples
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: Cache derived data
        uses: actions/cache@v3
        with:
          path: ~/.derivedData
          key: |
            deriveddata-examples-${{ hashFiles('**/Sources/**/*.swift', '**/Tests/**/*.swift', '**/Examples/**/*.swift') }}
          restore-keys: |
            deriveddata-examples-
      - name: Select Xcode 16
        run: sudo xcode-select -s /Applications/Xcode_16.app
      - name: Set IgnoreFileSystemDeviceInodeChanges flag
        run: defaults write com.apple.dt.XCBuild IgnoreFileSystemDeviceInodeChanges -bool YES
      - name: Update mtime for incremental builds
        uses: chetan/git-restore-mtime-action@v2
      - name: Examples
        run: make SCHEME="Examples" build-example
      - name: SlackClone
        run: make SCHEME="SlackClone" build-example
      - name: UserManagement
        run: make SCHEME="UserManagement" build-example
      
